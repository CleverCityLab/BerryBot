# utils/notifications.py
import logging
from typing import Dict, List, Tuple, Optional

from aiogram import Bot
from aiogram.exceptions import TelegramBadRequest
from aiogram.types import InlineKeyboardMarkup

from database.models.buyer_orders import BuyerOrders
from database.managers.buyer_order_manager import Item
from keyboards.client import get_main_inline_keyboard
from utils.secrets import get_admin_ids  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

log = logging.getLogger(__name__)


async def notify_admins(bot: Bot, text: str, reply_markup: Optional[InlineKeyboardMarkup] = None):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –∏–∑ —Å–ø–∏—Å–∫–∞ ADMIN_IDS.
    """
    admin_ids = get_admin_ids()
    if not admin_ids:
        log.warning("–°–ø–∏—Å–æ–∫ ADMIN_IDS –ø—É—Å—Ç. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        return

    for admin_id in admin_ids:
        try:
            await bot.send_message(
                chat_id=admin_id,
                text=text,
                parse_mode="Markdown",
                reply_markup=reply_markup
            )
        except TelegramBadRequest as e:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏: –±–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∞–¥–º–∏–Ω–æ–º, –Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏ —Ç.–¥.
            log.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")
        except Exception as e:
            log.exception(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")


def format_order_for_admin(
        order: BuyerOrders,
        buyer_data: Optional[Dict],
        items: List[Item]
) -> Tuple[str, InlineKeyboardMarkup]:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞ –∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤.
    """
    items_text_lines = []
    for item in items:
        items_text_lines.append(f"‚Ä¢ {item.title} x {item.qty} —à—Ç. = {item.price * item.qty} ‚ÇΩ")
    items_text = "\n".join(items_text_lines)

    total_goods = sum(item.price * item.qty for item in items)
    delivery_cost = float(order.delivery_cost)
    used_bonus = order.used_bonus
    total_to_pay = total_goods + delivery_cost - used_bonus

    delivery_way_map = {"pickup": "–°–∞–º–æ–≤—ã–≤–æ–∑", "delivery": "–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º"}
    delivery_way_text = delivery_way_map.get(order.delivery_way.value)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º .value –¥–ª—è ENUM

    message_lines = [
        f"üéâ *–ù–æ–≤—ã–π –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ ‚Ññ{order.id}*",
        "*- - - - - - - - - - - - - - - - -*",
        "üë§ *–ö–ª–∏–µ–Ω—Ç:*",
    ]
    if buyer_data:
        message_lines.extend([
            f"   –ò–º—è: {buyer_data.get('name_surname')}",
            f"   –¢–µ–ª–µ—Ñ–æ–Ω: `{buyer_data.get('tel_num')}`",
            f"   Telegram: @{buyer_data.get('tg_username', '–Ω–µ —É–∫–∞–∑–∞–Ω')}",
        ])

    message_lines.extend([
        "*- - - - - - - - - - - - - - - - -*",
        "üìã *–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:*",
        items_text,
        "*- - - - - - - - - - - - - - - - -*",
        "üöö *–î–æ—Å—Ç–∞–≤–∫–∞:*",
        f"   –°–ø–æ—Å–æ–±: *{delivery_way_text}*",
    ])

    if delivery_way_text == "–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º":
        message_lines.append(f"   –ê–¥—Ä–µ—Å: `{order.delivery_address}`")
        if order.yandex_claim_id:
            message_lines.append("   –Ø–Ω–¥–µ–∫—Å.–î–æ—Å—Ç–∞–≤–∫–∞: `–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞`")
        else:
            message_lines.append("   –Ø–Ω–¥–µ–∫—Å.–î–æ—Å—Ç–∞–≤–∫–∞: `‚ùóÔ∏è–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É`")

    message_lines.extend([
        "*- - - - - - - - - - - - - - - - -*",
        "üí∞ *–§–∏–Ω–∞–Ω—Å—ã:*",
        f"   –¢–æ–≤–∞—Ä—ã: `{total_goods}` ‚ÇΩ",
        f"   –î–æ—Å—Ç–∞–≤–∫–∞: `{delivery_cost}` ‚ÇΩ",
        f"   –ë–æ–Ω—É—Å—ã: `- {used_bonus}` ‚ÇΩ",
        f"   *–ò—Ç–æ–≥–æ:* `{max(0.0, total_to_pay):.2f}` ‚ÇΩ",
    ])

    final_text = "\n".join(message_lines)
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_keyboard = get_main_inline_keyboard(is_admin=True)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏ —Ç–µ–∫—Å—Ç, –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return final_text, admin_keyboard
