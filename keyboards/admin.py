from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from utils.statuses import S_WAITING, S_READY, S_TRANSFERRING, S_FINISHED


def admin_positions_list(positions: list[dict]) -> InlineKeyboardMarkup:
    rows = []
    for p in positions:
        title = f"{p['title']} ‚Äî {p['price']} —Ä—É–±, {p['quantity']} —à—Ç"
        rows.append([InlineKeyboardButton(text=title, callback_data=f"adm-pos:{p['id']}")])
    rows.append([InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å", callback_data="adm-pos:add")])
    rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back-admin-main")])
    return InlineKeyboardMarkup(inline_keyboard=rows)


def admin_pos_detail(pid: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"adm-pos:edit-title:{pid}")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É", callback_data=f"adm-pos:edit-price:{pid}")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ", callback_data=f"adm-pos:edit-qty:{pid}")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –≤–µ—Å", callback_data=f"adm-pos:edit-weight:{pid}")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –≥–∞–±–∞—Ä–∏—Ç—ã", callback_data=f"adm-pos:edit-dims:{pid}")],
        [InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data=f"adm-pos:delete:{pid}")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="adm-pos:back-list")],
    ])


def admin_confirm_delete(pid: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–î–ê", callback_data=f"adm-pos:delete-yes:{pid}")],
        [InlineKeyboardButton(text="–û–°–¢–ê–í–ò–¢–¨", callback_data=f"adm-pos:{pid}")],
    ])


def admin_edit_back(pid: int | None = None) -> InlineKeyboardMarkup:
    cb = f"adm-pos:{pid}" if pid else "positions"
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=cb)]
    ])


def get_admin_orders_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ê–∫—Ç–∏–≤–Ω—ã–µ", callback_data="adm-orders:active")],
        [InlineKeyboardButton(text="–ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ", callback_data="adm-orders:finished")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back-admin-main")],
    ])


def get_admin_orders_list_kb(orders: list[dict], finished: bool) -> InlineKeyboardMarkup:
    suffix = "fin" if finished else "act"
    rows = [
        [InlineKeyboardButton(
            text=f"#{o['id']} ({o['registration_date']:%d.%m})",
            callback_data=f"adm-order:{o['id']}:{suffix}"
        )]
        for o in orders
    ]
    rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="adm-orders:menu")])
    return InlineKeyboardMarkup(inline_keyboard=rows)


def admin_order_detail_kb(order: dict, *, suffix: str) -> InlineKeyboardMarkup:
    st, way = order["status"], order["delivery_way"]
    rows: list[list[InlineKeyboardButton]] = []

    if st == S_WAITING:
        to_status = S_READY if way == "pickup" else S_TRANSFERRING
        text = "–ì–æ—Ç–æ–≤ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é" if way == "pickup" else "–ü–µ—Ä–µ–¥–∞–Ω–æ –≤ –¥–æ—Å—Ç–∞–≤–∫—É"
        rows.append([InlineKeyboardButton(text=text,
                                          callback_data=f"adm-order:advance:{to_status}:{order['id']}:{suffix}")])

    if (st == S_READY and way == "pickup") or (st == S_TRANSFERRING and way == "delivery"):
        rows.append([InlineKeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç—å",
                                          callback_data=f"adm-order:advance:{S_FINISHED}:{order['id']}:{suffix}")])

    if st in (S_WAITING, S_READY):
        rows.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞",
                                          callback_data=f"adm-order:cancel:{order['id']}:{suffix}")])

    rows.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"adm-orders:back-list:{suffix}")])
    return InlineKeyboardMarkup(inline_keyboard=rows)


def admin_cancel_confirm_kb(order_id: int, suffix: str) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–î–ê", callback_data=f"adm-order:cancel-yes:{order_id}:{suffix}")],
        [InlineKeyboardButton(text="–û–°–¢–ê–í–ò–¢–¨", callback_data=f"adm-order:{order_id}:{suffix}")],
    ])


def notify_cancel_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel-fsm-admin")]
    ])


def notify_confirm_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –†–∞–∑–æ—Å–ª–∞—Ç—å", callback_data="notify:send")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="notify:redo")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel-fsm-admin")],
    ])


def admin_warehouse_detail_kb(warehouse_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–ª–∞–¥–∞."""
    builder = InlineKeyboardBuilder()

    builder.button(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"wh:edit:name:{warehouse_id}")
    builder.button(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –ê–¥—Ä–µ—Å", callback_data=f"wh:edit:address:{warehouse_id}")
    builder.button(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –ü–æ–¥—ä–µ–∑–¥", callback_data=f"wh:edit:porch:{warehouse_id}")
    builder.button(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –≠—Ç–∞–∂", callback_data=f"wh:edit:floor:{warehouse_id}")
    builder.button(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –ö–≤./–û—Ñ–∏—Å", callback_data=f"wh:edit:apartment:{warehouse_id}")
    builder.button(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ", callback_data=f"wh:edit:contact_name:{warehouse_id}")
    builder.button(text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –¢–µ–ª–µ—Ñ–æ–Ω", callback_data=f"wh:edit:contact_phone:{warehouse_id}")
    # --- –ù–û–í–ê–Ø –ö–ù–û–ü–ö–ê ---
    builder.button(text="üìç –û–±–Ω–æ–≤–∏—Ç—å –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã", callback_data=f"wh:edit:location:{warehouse_id}")

    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é", callback_data="back-admin-main")
    builder.adjust(1)
    return builder.as_markup()


def admin_create_warehouse_kb() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∞—è —Å–æ–∑–¥–∞—Ç—å —Å–∫–ª–∞–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω.
    """
    builder = InlineKeyboardBuilder()
    builder.button(text="‚ûï –°–æ–∑–¥–∞—Ç—å —Å–∫–ª–∞–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", callback_data="wh:create")
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é", callback_data="back-admin-main")
    builder.adjust(1)
    return builder.as_markup()
